import java.util.regex.Matcher
import java.util.regex.Pattern

ext {

    // 打包时改成对应的flavor name
    currentFlavor = ''
    curVariantsName = ''
    isDebug = true

    // 当前谷歌aab渠道 gf00001 正式服release 测试服debug渠道号test001
    channel = 'gf00001'
    testChannel = 'test001'

    versionCode = 663
    versionName = '6.6.3'

    productConfig = [
            ayome : [
                    group : 'google',
                    app_name : "Alomet",
                    versionCode : 663,
                    versionName : '6.6.3',
                    channel : testChannel,
                    curFlavorName : 'honeychat',
                    isVisitor : false, // 是否显示游客登录
                    isMarket : false
        ],
            ayome1 : [ // 市场包
                    group : 'market',
                    app_name : "Alomet_market",
                    versionCode : 658,
                    versionName : '6.5.8',
                    channel : 'gf00002',
                    curFlavorName : 'alometMarket',
                    isVisitor : true,
                    isMarket : true
        ]
    ]
    checkCurFlavor()
    currentInfo = getCurrentFlavor(rootProject)
}

/**
 * 打包或者debug运行时获得当前的flavorName！！
 * @return
 */
def checkCurFlavor() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

    println("=======================> tskReqStr:" + tskReqStr)
    Pattern pattern;

    if (tskReqStr.contains("assemble")) {
        pattern = Pattern.compile("assemble(\\w+)(Release|Debug|Beta)")
    } else if (tskReqStr.contains("generate")) {
        pattern = Pattern.compile("generate(\\w+)(Release|Debug|Beta)")
    }
    else if (tskReqStr.contains("bundle")) {
        pattern = Pattern.compile("bundle(\\w+)(Release|Debug|Beta)")
    } else {
        pattern = Pattern.compile("generate(\\w+)(Release|Debug|Beta)")
    }

    Matcher matcher = pattern.matcher(tskReqStr)

    if (matcher.find()) {
        rootProject.currentFlavor = realFlavorName(curVariantsName = firstLowerCase(matcher.group(1)))
        println("=======================> rootProject.currentFlavor: " +  rootProject.currentFlavor)
        println("=======================> curVariantsName.toLowerCase()---->${curVariantsName.toLowerCase()},group------------>${getCurrentFlavor(rootProject).group.toLowerCase()}")
        if (!curVariantsName.toLowerCase().startsWith(getCurrentFlavor(rootProject).group.toLowerCase())) {
            throw new IllegalStateException("your group is not same with your buildVariants!")
        }
        println("=======================> checkCurFlavor------->${rootProject.curVariantsName},currentFlavor=${rootProject.curVariantsName}")
    } else {
        println("=======================> checkCurFlavor------->NO MATCH FLAVOR FOUND")
    }
}

def getCurrentFlavor(rootProject) {
    println("=======================> getCurrentFlavor.rootProject.currentFlavor------->" + rootProject.currentFlavor)
    return getProductInfoByName(rootProject.currentFlavor, rootProject)
}

def getProductInfoByName(name, rootProject) {
    println("=======================> name------->" + name)
    for (Map.Entry entry : rootProject.productConfig) {
        if (entry.key == name) {
            println("=======================> returnreturn------->" + entry.key)
            return entry.value;
        }
    }
}

def String firstLowerCase(String s){
    if(Character.isLowerCase(s.charAt(0)))
        return s;
    else{
        char[] chars = s.toCharArray();
        chars[0] += 32;
        return String.valueOf(chars);
    }
}

/**
 * 获得真实渠道名称
 * @param mergeFlavorName
 * @return
 */
def String realFlavorName(String mergeFlavorName){
    if (!mergeFlavorName)
        return "";
    return mergeFlavorName
            .toLowerCase()
            .replaceAll("google", "")
            .replaceAll("market", "")
            .replaceAll("c_inter", "")
            .replaceAll("z_anchor", "")
            .replaceAll("debug", "")
            .replaceAll("release", "")
            .replaceAll("test","")
            .replaceAll("android", "");
}

















